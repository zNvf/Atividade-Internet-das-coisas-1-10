#include <locale.h>
#include <stdio.h>
#include <stdbool.h>
#define N 9

void printBoard(int board[N][N]) {
for (int i = 0; i < N; i++) {
for (int j = 0; j < N; j++) {
printf("%d ", board[i][j]);
}
printf("\n");
}
}

bool isSafe(int board[N][N], int row, int col, int num) {
for (int x = 0; x < N; x++) {
if (board[row][x] == num || board[x][col] == num || 
board[row - row % 3 + x / 3][col - col % 3 + x % 3] == num) {
return false;
}
}
return true;
}

bool solveSudoku(int board[N][N]) {
int row, col;
bool emptyCell = false;

for (row = 0; row < N; row++) {
for (col = 0; col < N; col++) {
if (board[row][col] == 0) {
emptyCell = true;
break;
}
}
if (emptyCell) {
break;
}
}

if (!emptyCell) {
return true;
}

for (int num = 1; num <= N; num++) {
if (isSafe(board, row, col, num)) {
board[row][col] = num;

if (solveSudoku(board)) {
return true;
}

board[row][col] = 0; 
}
}

return false;
}

int main() {
setlocale(LC_ALL, "Portuguese");

int board[N][N] = {
{5, 3, 0, 0, 7, 0, 0, 0, 0},
{6, 0, 0, 1, 9, 5, 0, 0, 0},
{0, 9, 8, 0, 0, 0, 0, 6, 0},
{8, 0, 0, 0, 6, 0, 0, 0, 3},
{4, 0, 0, 8, 0, 3, 0, 0, 1},
{7, 0, 0, 0, 2, 0, 0, 0, 6},
{0, 6, 0, 0, 0, 0, 2, 8, 0},
{0, 0, 0, 4, 1, 9, 0, 0, 5},
{0, 0, 0, 0, 8, 0, 0, 7, 9}
};

if (solveSudoku(board)) {
printf("Solução encontrada:\n");
printBoard(board);
} else {
printf("Não há solução para o Sudoku fornecido.\n");
}

return 0;
}
